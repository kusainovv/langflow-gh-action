name: Docker Build and Push
run-name: Docker Build and Push by @${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Type of release: 'main', 'main-ep', 'base', 'nightly-main', 'nightly-base'."
        required: true
        type: string
      pre_release:
        required: false
        type: boolean
        default: false
      ref:
        required: false
        type: string
        description: "Branch to check out. Defaults to 'main'."

env:
  POETRY_VERSION: "1.8.2"
  TEST_TAG: "langflowai/langflow:test"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the latest code from main
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || 'main' }}

      - name: "Setup Environment"
        uses: ./.github/actions/setup-uv

      - name: Install dependencies
        run: |
          uv sync --no-dev --no-sources

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ðŸ”¥ BUILD BASE IMAGE FROM LOCAL SOURCE CODE ðŸ”¥
      - name: Build Local Base Image
        run: |
          docker build -t langflow-image:latest -f docker/build_and_push_base.Dockerfile .

      # ðŸ”¥ BUILD BACKEND AND FRONTEND USING LOCAL BASE IMAGE ðŸ”¥
      - name: Build Backend Image
        run: |
          docker build -t backend:latest -f docker/build_and_push_backend.Dockerfile --build-arg LANGFLOW_IMAGE=langflow-image:latest .

      - name: Build Frontend Image
        run: |
          docker build -t frontend:latest -f docker/frontend/build_and_push_frontend.Dockerfile --build-arg LANGFLOW_IMAGE=langflow-image:latest .

  push:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
        contents: read
        packages: write  # âœ… Required for GHCR authentication

    steps:
        - name: Check out the latest code from main
          uses: actions/checkout@v4
          with:
            ref: ${{ inputs.ref || 'main' }}

        - name: Login to GitHub Container Registry (GHCR)
          run: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        # ðŸ”¥ REBUILD BACKEND & FRONTEND TO ENSURE THEY EXIST ðŸ”¥
        - name: Rebuild Backend Image
          run: |
            docker build -t backend:latest -f docker/build_and_push_backend.Dockerfile --build-arg LANGFLOW_IMAGE=langflow-image:latest .

        - name: Rebuild Frontend Image
          run: |
            docker build -t frontend:latest -f docker/frontend/build_and_push_frontend.Dockerfile --build-arg LANGFLOW_IMAGE=langflow-image:latest .

        # ðŸ”¥ PUSH TO GITHUB CONTAINER REGISTRY (GHCR) ðŸ”¥
        - name: Push Backend & Frontend to GHCR
          run: |
            REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
            docker tag backend:latest ghcr.io/$REPO_NAME/langflow-backend:latest
            docker tag frontend:latest ghcr.io/$REPO_NAME/langflow-frontend:latest
            docker push ghcr.io/$REPO_NAME/langflow-backend:latest
            docker push ghcr.io/$REPO_NAME/langflow-frontend:latest